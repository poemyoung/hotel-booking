<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wxwl.hotelbooking.mapper.SearchMapper">
    <sql id="Hotel_Result_List">
        ta.hotelId, chainName, brandName, hotelName, hotelFormerlyName, hotelTranslatedName, address,
    zipcode, starRating, longitude, latitude, checkin, checkout, numberRooms, numberFloors,
    yearOpened, yearRenovated, photoOne, photoTwo, photoThree, photoFour, photoFive,
    overview, minPrice, numberOfReviews, averageRating
    </sql>

    <sql id="Hotels_List">
         hotels.hotelId, chainId, brandId, hotelName, hotelFormerlyName, hotelTranslatedName, address,
    zipcode, starRating, longitude, latitude, checkin, checkout, numberRooms, numberFloors,
    yearOpened, yearRenovated, photoOne, photoTwo, photoThree, photoFour, photoFive,
    overview, minPrice, numberOfReviews, averageRating
    </sql>


    <select id="searchByConditions" resultType="com.wxwl.hotelbooking.common.domain.HotelResult">
        select
        <include refid="Hotel_Result_List"></include>
        from
        (
        select
        <include refid="Hotels_List"></include>
        from
        hotels
        <where>
            <if test="hotelList !=null">
                hotels.hotelId in
                <foreach collection="hotelList" item="hotel" open="(" close=")" separator=",">
                    #{hotel.hotelid}
                </foreach>
            </if>
        </where>
        ) ta
        left join chains
        on chains.chainId=ta.chainId
        left join brands
        on brands.brandId=ta.brandId
        natural join
        (
            select hotelId from
            (
                select rooms.id,rooms.hotelId,
                if((rooms.count-roomsOccupied) * capacity IS NULL,
                rooms.count * rooms.capacity,(rooms.count-roomsOccupied) * capacity)
                as roomCap
                from
                rooms left join
                (
                    select reserves.roomId,count(reserves.id) as roomsOccupied from reserves
                    <where>
                        <if test="checkIn!=null">
                            (#{checkIn} &lt;= reserves.checkInAt and #{checkOut} &gt;= reserves.checkInAt)
                        </if>
                        or
                        <if test="checkOut!=null">
                            (#{checkIn} &gt;= reserves.checkInAt and #{checkOut} &lt;= reserves.checkOutAt)
                        </if>
                    </where>
                    group by
                     reserves.roomId
                ) tb
                on rooms.id = tb.roomId
            )  t group by t.hotelId having SUM(roomCap) >= #{num}
        ) tc;
    </select>
</mapper>